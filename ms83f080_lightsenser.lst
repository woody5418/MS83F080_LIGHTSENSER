

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed May 23 18:06:29 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text516,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text517,local,class=CODE,delta=2
    12                           	psect	text518,local,class=CODE,delta=2
    13                           	psect	text519,local,class=CODE,delta=2
    14                           	psect	text520,local,class=CODE,delta=2
    15                           	psect	text521,local,class=CODE,delta=2
    16                           	psect	text522,local,class=CODE,delta=2
    17                           	psect	text523,local,class=CODE,delta=2
    18                           	psect	text524,local,class=CODE,delta=2
    19                           	psect	text525,local,class=CODE,delta=2
    20                           	psect	text526,local,class=CODE,delta=2
    21                           	psect	text527,local,class=CODE,delta=2
    22                           	psect	text528,local,class=CODE,delta=2
    23                           	psect	text529,local,class=CODE,delta=2
    24                           	psect	text530,local,class=CODE,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text531,local,class=CODE,delta=2
    27                           	psect	pa_nodes,global,class=CODE,delta=2
    28                           	dabs	1,0x19D,1
    29                           	dabs	1,0x19E,1
    30                           	dabs	1,0x19E,1
    31                           	dabs	1,0x19E,1
    32                           	dabs	1,0x18C,1
    33                           	dabs	1,0x19E,1
    34                           	dabs	1,0x19E,1
    35                           	dabs	1,0x19E,1
    36                           	dabs	1,0x19E,1
    37                           	dabs	1,0x19D,1
    38                           	dabs	1,0x19D,1
    39                           	dabs	1,0x19D,1
    40                           	dabs	1,0x19D,1
    41                           	dabs	1,0x19D,1
    42                           	dabs	1,0x18C,1
    43                           	dabs	1,0x7E,2
    44  000A                     
    45                           	psect	text516
    46  0000                     __ptext516:	
    47  019D                     _PSTRCON	set	413	;_PSTRCON
    48  019E                     _SRCON	set	414	;_SRCON
    49  0CF5                     _C1SEN	set	3317	;_C1SEN
    50  0CF4                     _C2REN	set	3316	;_C2REN
    51  0C67                     _EEPGD	set	3175	;_EEPGD
    52  0CF2                     _PULSR	set	3314	;_PULSR
    53  0CF3                     _PULSS	set	3315	;_PULSS
    54  0CF6                     _SR0	set	3318	;_SR0
    55  0CF7                     _SR1	set	3319	;_SR1
    56  0CE8                     _STRA	set	3304	;_STRA
    57  0CE9                     _STRB	set	3305	;_STRB
    58  0CEA                     _STRC	set	3306	;_STRC
    59  0CEB                     _STRD	set	3307	;_STRD
    60  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    61  0C62                     _WREN	set	3170	;_WREN
    62  001F                     _ADCON0	set	31
    63  001E                     _ADRESH	set	30
    64  0018                     _WDTCON	set	24
    65  00FF                     _ADFM	set	255
    66  00F8                     _ADON	set	248
    67  00FA                     _CHS0	set	250
    68  00FB                     _CHS1	set	251
    69  00FC                     _CHS2	set	252
    70  00C8                     _CM0	set	200
    71  00C9                     _CM1	set	201
    72  00CA                     _CM2	set	202
    73  0067                     _EEIF	set	103
    74  005F                     _GIE	set	95
    75  00F9                     _GO_DONE	set	249
    76  002E                     _PA6	set	46
    77  0039                     _PC1	set	57
    78  003B                     _PC3	set	59
    79  00FD                     _VCFG0	set	253
    80  009E                     _ADRESL	set	158
    81  009B                     _EEADR	set	155
    82  009C                     _EECON1	set	156
    83  009A                     _EEDAT	set	154
    84  0081                     _OPTION	set	129
    85  008F                     _OSCCON	set	143
    86  04FC                     _ADCS0	set	1276
    87  04FD                     _ADCS1	set	1277
    88  04FE                     _ADCS2	set	1278
    89  0488                     _ANSEL0	set	1160
    90  0489                     _ANSEL1	set	1161
    91  048A                     _ANSEL2	set	1162
    92  048B                     _ANSEL3	set	1163
    93  048C                     _ANSEL4	set	1164
    94  048D                     _ANSEL5	set	1165
    95  048E                     _ANSEL6	set	1166
    96  048F                     _ANSEL7	set	1167
    97  04FF                     _DIVS	set	1279
    98  04E0                     _RD	set	1248
    99  0428                     _TRISA0	set	1064
   100  0429                     _TRISA1	set	1065
   101  042E                     _TRISA6	set	1070
   102  0439                     _TRISC1	set	1081
   103  043A                     _TRISC2	set	1082
   104  043B                     _TRISC3	set	1083
   105  044C                     _WPDA4	set	1100
   106  044B                     _WPDC1	set	1099
   107  044A                     _WPDC2	set	1098
   108  0449                     _WPDC3	set	1097
   109  04A8                     _WPUA0	set	1192
   110  04A9                     _WPUA1	set	1193
   111  04AE                     _WPUA6	set	1198
   112  0441                     _WPUC1	set	1089
   113  0442                     _WPUC2	set	1090
   114  0443                     _WPUC3	set	1091
   115  04E8                     _WR	set	1256
   116                           
   117                           	psect	cinit
   118  0141                     start_initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0141  01F8               	clrf	__pbssCOMMON& (0+127)
   122  0142  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   123  0143  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   124  0144  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   125                           
   126                           ; Clear objects allocated to BANK0
   127  0145  01A0               	clrf	__pbssBANK0& (0+127)
   128  0146  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   129  0147  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   130  0148  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   131  0149                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  0149  0183               	clrf	3
   135  014A  280B               	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  0078                     __pbssCOMMON:	
   139  0078                     _ADC1_ADCOUT:	
   140  0078                     	ds	2
   141  007A                     _i:	
   142  007A                     	ds	1
   143  007B                     _j:	
   144  007B                     	ds	1
   145                           
   146                           	psect	bssBANK0
   147  0020                     __pbssBANK0:	
   148  0020                     _ADC6_INPUT:	
   149  0020                     	ds	2
   150  0022                     _ADC_STUDY_VALUE:	
   151  0022                     	ds	2
   152                           
   153                           	psect	cstackCOMMON
   154  0070                     __pcstackCOMMON:	
   155  0070                     ?_System_init:	
   156  0070                     ?_GPIO_Init:	
   157                           ; 0 bytes @ 0x0
   158                           
   159  0070                     ?_ADC_Init:	
   160                           ; 0 bytes @ 0x0
   161                           
   162  0070                     ?_EEPROM_Init:	
   163                           ; 0 bytes @ 0x0
   164                           
   165  0070                     ?_LED_Study_End:	
   166                           ; 0 bytes @ 0x0
   167                           
   168  0070                     ?_ExchChannel:	
   169                           ; 0 bytes @ 0x0
   170                           
   171  0070                     ?_main:	
   172                           ; 0 bytes @ 0x0
   173                           
   174  0070                     ?_ISR:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ??_ISR:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?_isKeyPressed:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?_Read_EEPROM_u8:	
   184                           ; 1 bytes @ 0x0
   185                           
   186                           
   187                           ; 1 bytes @ 0x0
   188  0070                     	ds	2
   189  0072                     ??_System_init:	
   190  0072                     ??_GPIO_Init:	
   191                           ; 0 bytes @ 0x2
   192                           
   193  0072                     ??_ExchChannel:	
   194                           ; 0 bytes @ 0x2
   195                           
   196  0072                     ?_Delay_xms:	
   197                           ; 0 bytes @ 0x2
   198                           
   199  0072                     ??_isKeyPressed:	
   200                           ; 0 bytes @ 0x2
   201                           
   202  0072                     ?_Write_EEPROM_u8:	
   203                           ; 0 bytes @ 0x2
   204                           
   205  0072                     ??_Read_EEPROM_u8:	
   206                           ; 0 bytes @ 0x2
   207                           
   208  0072                     ?_GetADCValue:	
   209                           ; 0 bytes @ 0x2
   210                           
   211  0072                     Write_EEPROM_u8@EEDatas:	
   212                           ; 2 bytes @ 0x2
   213                           
   214  0072                     Read_EEPROM_u8@EEAddress:	
   215                           ; 1 bytes @ 0x2
   216                           
   217  0072                     Delay_xms@x:	
   218                           ; 1 bytes @ 0x2
   219                           
   220                           
   221                           ; 2 bytes @ 0x2
   222  0072                     	ds	1
   223  0073                     ??_Write_EEPROM_u8:	
   224  0073                     Write_EEPROM_u8@EEAddress:	
   225                           ; 0 bytes @ 0x3
   226                           
   227  0073                     Read_EEPROM_u8@ReEepromData:	
   228                           ; 1 bytes @ 0x3
   229                           
   230                           
   231                           ; 1 bytes @ 0x3
   232  0073                     	ds	1
   233  0074                     ??_EEPROM_Init:	
   234  0074                     ??_GetADCValue:	
   235                           ; 0 bytes @ 0x4
   236                           
   237  0074                     ??_Delay_xms:	
   238                           ; 0 bytes @ 0x4
   239                           
   240  0074                     ?_Write_EEPROM_u16:	
   241                           ; 0 bytes @ 0x4
   242                           
   243  0074                     ?_Read_EEPROM_u16:	
   244                           ; 0 bytes @ 0x4
   245                           
   246  0074                     ExchChannel@ch_temp:	
   247                           ; 2 bytes @ 0x4
   248                           
   249  0074                     GetADCValue@ADC_num:	
   250                           ; 1 bytes @ 0x4
   251                           
   252  0074                     Write_EEPROM_u16@EEDatas:	
   253                           ; 2 bytes @ 0x4
   254                           
   255                           
   256                           ; 2 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     ExchChannel@adc_ch_temp:	
   259                           
   260                           ; 1 bytes @ 0x5
   261  0075                     	ds	1
   262  0076                     ??_Read_EEPROM_u16:	
   263  0076                     ??_Write_EEPROM_u16:	
   264                           ; 0 bytes @ 0x6
   265                           
   266  0076                     Delay_xms@i:	
   267                           ; 0 bytes @ 0x6
   268                           
   269                           
   270                           ; 2 bytes @ 0x6
   271  0076                     	ds	2
   272  0078                     ??_ADC_Init:	
   273  0078                     ??_LED_Study_End:	
   274                           ; 0 bytes @ 0x8
   275                           
   276  0078                     ??_main:	
   277                           ; 0 bytes @ 0x8
   278                           
   279                           
   280                           	psect	cstackBANK0
   281  0024                     __pcstackBANK0:	
   282                           ; 0 bytes @ 0x8
   283                           
   284  0024                     Write_EEPROM_u16@DATA_H:	
   285  0024                     Read_EEPROM_u16@EepromData:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 2 bytes @ 0x0
   290  0024                     	ds	1
   291  0025                     Write_EEPROM_u16@DATA_L:	
   292                           
   293                           ; 1 bytes @ 0x1
   294  0025                     	ds	1
   295  0026                     Write_EEPROM_u16@EEAddress:	
   296  0026                     Read_EEPROM_u16@EEAddress:	
   297                           ; 1 bytes @ 0x2
   298                           
   299                           
   300                           ; 1 bytes @ 0x2
   301  0026                     	ds	1
   302                           
   303                           	psect	maintext
   304  000B                     __pmaintext:	
   305 ;;Data sizes: Strings 0, constant 0, data 0, bss 8, persistent 0 stack 0
   306 ;;Auto spaces:   Size  Autos    Used
   307 ;; COMMON          14      8      12
   308 ;; BANK0           80      3       7
   309 ;; BANK1           32      0       0
   310 ;;
   311 ;; Pointer list with targets:
   312 ;; ?_Read_EEPROM_u16	unsigned int  size(1) Largest target is 0
   313 ;;
   314 ;; ?_GetADCValue	unsigned short  size(1) Largest target is 0
   315 ;;
   316 ;;
   317 ;; Critical Paths under _main in COMMON
   318 ;;
   319 ;;   _main->_Delay_xms
   320 ;;   _LED_Study_End->_Delay_xms
   321 ;;   _ADC_Init->_Delay_xms
   322 ;;   _Write_EEPROM_u16->_Write_EEPROM_u8
   323 ;;   _Read_EEPROM_u16->_Read_EEPROM_u8
   324 ;;   _EEPROM_Init->_Write_EEPROM_u8
   325 ;;
   326 ;; Critical Paths under _ISR in COMMON
   327 ;;
   328 ;;   None.
   329 ;;
   330 ;; Critical Paths under _main in BANK0
   331 ;;
   332 ;;   _main->_Read_EEPROM_u16
   333 ;;   _main->_Write_EEPROM_u16
   334 ;;
   335 ;; Critical Paths under _ISR in BANK0
   336 ;;
   337 ;;   None.
   338 ;;
   339 ;; Critical Paths under _main in BANK1
   340 ;;
   341 ;;   None.
   342 ;;
   343 ;; Critical Paths under _ISR in BANK1
   344 ;;
   345 ;;   None.
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;;
   350 ;;Call Graph Tables:
   351 ;;
   352 ;; ---------------------------------------------------------------------------------
   353 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   354 ;; ---------------------------------------------------------------------------------
   355 ;; (0) _main                                                 0     0      0     702
   356 ;;                        _System_init
   357 ;;                          _GPIO_Init
   358 ;;                           _ADC_Init
   359 ;;                        _EEPROM_Init
   360 ;;                    _Read_EEPROM_u16
   361 ;;                      _LED_Study_End
   362 ;;                        _ExchChannel
   363 ;;                        _GetADCValue
   364 ;;                          _Delay_xms
   365 ;;                       _isKeyPressed
   366 ;;                   _Write_EEPROM_u16
   367 ;; ---------------------------------------------------------------------------------
   368 ;; (1) _LED_Study_End                                        0     0      0      46
   369 ;;                          _Delay_xms
   370 ;; ---------------------------------------------------------------------------------
   371 ;; (1) _ADC_Init                                             0     0      0      46
   372 ;;                          _Delay_xms
   373 ;; ---------------------------------------------------------------------------------
   374 ;; (1) _Write_EEPROM_u16                                     5     3      2     260
   375 ;;                                              4 COMMON     2     0      2
   376 ;;                                              0 BANK0      3     3      0
   377 ;;                    _Write_EEPROM_u8
   378 ;; ---------------------------------------------------------------------------------
   379 ;; (1) _Delay_xms                                            6     4      2      46
   380 ;;                                              2 COMMON     6     4      2
   381 ;; ---------------------------------------------------------------------------------
   382 ;; (1) _ExchChannel                                          4     4      0      46
   383 ;;                                              2 COMMON     4     4      0
   384 ;; ---------------------------------------------------------------------------------
   385 ;; (1) _Read_EEPROM_u16                                      5     3      2     170
   386 ;;                                              4 COMMON     2     0      2
   387 ;;                                              0 BANK0      3     3      0
   388 ;;                     _Read_EEPROM_u8
   389 ;; ---------------------------------------------------------------------------------
   390 ;; (1) _EEPROM_Init                                          0     0      0      62
   391 ;;                    _Write_EEPROM_u8
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (2) _Read_EEPROM_u8                                       2     2      0      65
   394 ;;                                              2 COMMON     2     2      0
   395 ;; ---------------------------------------------------------------------------------
   396 ;; (2) _Write_EEPROM_u8                                      2     1      1      62
   397 ;;                                              2 COMMON     2     1      1
   398 ;; ---------------------------------------------------------------------------------
   399 ;; (1) _isKeyPressed                                         0     0      0       0
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (1) _GetADCValue                                          4     2      2      26
   402 ;;                                              2 COMMON     4     2      2
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (1) _GPIO_Init                                            0     0      0       0
   405 ;; ---------------------------------------------------------------------------------
   406 ;; (1) _System_init                                          0     0      0       0
   407 ;; ---------------------------------------------------------------------------------
   408 ;; Estimated maximum stack depth 2
   409 ;; ---------------------------------------------------------------------------------
   410 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   411 ;; ---------------------------------------------------------------------------------
   412 ;; (3) _ISR                                                  2     2      0       0
   413 ;;                                              0 COMMON     2     2      0
   414 ;; ---------------------------------------------------------------------------------
   415 ;; Estimated maximum stack depth 3
   416 ;; ---------------------------------------------------------------------------------
   417 ;; Call Graph Graphs:
   418 ;; _main (ROOT)
   419 ;;   _System_init
   420 ;;   _GPIO_Init
   421 ;;   _ADC_Init
   422 ;;     _Delay_xms
   423 ;;   _EEPROM_Init
   424 ;;     _Write_EEPROM_u8
   425 ;;   _Read_EEPROM_u16
   426 ;;     _Read_EEPROM_u8
   427 ;;   _LED_Study_End
   428 ;;     _Delay_xms
   429 ;;   _ExchChannel
   430 ;;   _GetADCValue
   431 ;;   _Delay_xms
   432 ;;   _isKeyPressed
   433 ;;   _Write_EEPROM_u16
   434 ;;     _Write_EEPROM_u8
   435 ;;
   436 ;; _ISR (ROOT)
   437 ;;
   438 ;; Address spaces:
   439 ;;Name               Size   Autos  Total    Cost      Usage
   440 ;;BITCOMMON            E      0       0       0        0.0%
   441 ;;EEDATA             100      0       0       0        0.0%
   442 ;;NULL                 0      0       0       0        0.0%
   443 ;;CODE                 0      0       0       0        0.0%
   444 ;;COMMON               E      8       C       1       85.7%
   445 ;;BITSFR0              0      0       0       1        0.0%
   446 ;;SFR0                 0      0       0       1        0.0%
   447 ;;BITSFR1              0      0       0       2        0.0%
   448 ;;SFR1                 0      0       0       2        0.0%
   449 ;;STACK                0      0       2       2        0.0%
   450 ;;BITBANK0            50      0       0       3        0.0%
   451 ;;BANK0               50      3       7       4        8.8%
   452 ;;BITBANK1            20      0       0       5        0.0%
   453 ;;BITSFR2              0      0       0       5        0.0%
   454 ;;SFR2                 0      0       0       5        0.0%
   455 ;;BANK1               20      0       0       6        0.0%
   456 ;;ABS                  0      0      13       7        0.0%
   457 ;;DATA                 0      0      15       8        0.0%
   458                           
   459                           
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 35 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 17F/0
   473 ;;		On exit  : 60/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1
   476 ;;      Params:         0       0       0
   477 ;;      Locals:         0       0       0
   478 ;;      Temps:          0       0       0
   479 ;;      Totals:         0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called:    3
   482 ;; This function calls:
   483 ;;		_System_init
   484 ;;		_GPIO_Init
   485 ;;		_ADC_Init
   486 ;;		_EEPROM_Init
   487 ;;		_Read_EEPROM_u16
   488 ;;		_LED_Study_End
   489 ;;		_ExchChannel
   490 ;;		_GetADCValue
   491 ;;		_Delay_xms
   492 ;;		_isKeyPressed
   493 ;;		_Write_EEPROM_u16
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498  000B                     _main:	
   499                           
   500                           ;main.c: 37: System_init();
   501                           
   502                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   503  000B  2164               	fcall	_System_init
   504                           
   505                           ;main.c: 38: GPIO_Init();
   506  000C  206F               	fcall	_GPIO_Init
   507                           
   508                           ;main.c: 39: ADC_Init();
   509  000D  20C5               	fcall	_ADC_Init
   510                           
   511                           ;main.c: 40: EEPROM_Init();
   512  000E  2154               	fcall	_EEPROM_Init
   513  000F  3000               	movlw	0
   514                           
   515                           ;main.c: 41: PC1=0;
   516  0010  1283               	bcf	3,5	;RP0=0, select bank0
   517  0011  1087               	bcf	7,1
   518                           
   519                           ;main.c: 42: ADC_STUDY_VALUE = Read_EEPROM_u16(0x00);
   520  0012  2122               	fcall	_Read_EEPROM_u16
   521  0013  0875               	movf	?_Read_EEPROM_u16+1,w
   522  0014  00A3               	movwf	_ADC_STUDY_VALUE+1
   523  0015  0874               	movf	?_Read_EEPROM_u16,w
   524  0016  00A2               	movwf	_ADC_STUDY_VALUE
   525                           
   526                           ;main.c: 43: LED_Study_End();
   527  0017  208E               	fcall	_LED_Study_End
   528  0018                     l6872:	
   529                           
   530                           ;main.c: 46: ExchChannel(1);
   531  0018  3001               	movlw	1
   532  0019  20DE               	fcall	_ExchChannel
   533                           
   534                           ;main.c: 47: for(i=0;i<5;i++)
   535  001A  01FA               	clrf	_i
   536  001B                     l6880:	
   537                           
   538                           ;main.c: 48: ADC1_ADCOUT = (GetADCValue()&0xfff0);
   539  001B  210F               	fcall	_GetADCValue
   540  001C  0873               	movf	?_GetADCValue+1,w
   541  001D  00F9               	movwf	_ADC1_ADCOUT+1
   542  001E  0872               	movf	?_GetADCValue,w
   543  001F  00F8               	movwf	_ADC1_ADCOUT
   544  0020  30F0               	movlw	240
   545  0021  05F8               	andwf	_ADC1_ADCOUT,f
   546  0022  3005               	movlw	5
   547  0023  0AFA               	incf	_i,f
   548  0024  027A               	subwf	_i,w
   549  0025  1C03               	skipc
   550  0026  281B               	goto	l6880
   551                           
   552                           ;main.c: 49: ExchChannel(6);
   553  0027  3006               	movlw	6
   554  0028  20DE               	fcall	_ExchChannel
   555                           
   556                           ;main.c: 50: for(j=0;j<5;j++)
   557  0029  01FB               	clrf	_j
   558  002A                     l6896:	
   559                           
   560                           ;main.c: 51: ADC6_INPUT = GetADCValue();
   561  002A  210F               	fcall	_GetADCValue
   562  002B  0873               	movf	?_GetADCValue+1,w
   563  002C  00A1               	movwf	_ADC6_INPUT+1
   564  002D  0872               	movf	?_GetADCValue,w
   565  002E  00A0               	movwf	_ADC6_INPUT
   566  002F  3005               	movlw	5
   567  0030  0AFB               	incf	_j,f
   568  0031  027B               	subwf	_j,w
   569  0032  1C03               	skipc
   570  0033  282A               	goto	l6896
   571                           
   572                           ;main.c: 52: Delay_xms(5);
   573  0034  3005               	movlw	5
   574  0035  00F2               	movwf	?_Delay_xms
   575  0036  01F3               	clrf	?_Delay_xms+1
   576  0037  20F7               	fcall	_Delay_xms
   577                           
   578                           ;main.c: 54: if(isKeyPressed())
   579  0038  214B               	fcall	_isKeyPressed
   580  0039  3A00               	xorlw	0
   581  003A  1903               	skipnz
   582  003B  285C               	goto	l1102
   583  003C  3000               	movlw	0
   584                           
   585                           ;main.c: 55: {
   586                           ;main.c: 56: PA6=1;
   587  003D  1705               	bsf	5,6
   588                           
   589                           ;main.c: 57: if(ADC_STUDY_VALUE>6)
   590  003E  0223               	subwf	_ADC_STUDY_VALUE+1,w
   591  003F  3007               	movlw	7
   592  0040  1903               	skipnz
   593  0041  0222               	subwf	_ADC_STUDY_VALUE,w
   594                           
   595                           ;main.c: 58: ADC_STUDY_VALUE = ADC1_ADCOUT-5;
   596  0042  0879               	movf	_ADC1_ADCOUT+1,w
   597  0043  00A3               	movwf	_ADC_STUDY_VALUE+1
   598  0044  0878               	movf	_ADC1_ADCOUT,w
   599  0045  00A2               	movwf	_ADC_STUDY_VALUE
   600  0046  1C03               	skipc
   601  0047  284E               	goto	l6912
   602  0048  30FB               	movlw	251
   603  0049  07A2               	addwf	_ADC_STUDY_VALUE,f
   604  004A  1803               	skipnc
   605  004B  0AA3               	incf	_ADC_STUDY_VALUE+1,f
   606  004C  30FF               	movlw	255
   607  004D  07A3               	addwf	_ADC_STUDY_VALUE+1,f
   608  004E                     l6912:	
   609                           ;main.c: 59: else
   610                           ;main.c: 60: ADC_STUDY_VALUE = ADC1_ADCOUT;
   611                           
   612                           
   613                           ;main.c: 62: Write_EEPROM_u16(0x00,ADC_STUDY_VALUE);
   614  004E  0823               	movf	_ADC_STUDY_VALUE+1,w
   615  004F  00F5               	movwf	?_Write_EEPROM_u16+1
   616  0050  0822               	movf	_ADC_STUDY_VALUE,w
   617  0051  00F4               	movwf	?_Write_EEPROM_u16
   618  0052  3000               	movlw	0
   619  0053  2132               	fcall	_Write_EEPROM_u16
   620                           
   621                           ;main.c: 63: Delay_xms(500);
   622  0054  30F4               	movlw	244
   623  0055  00F2               	movwf	?_Delay_xms
   624  0056  3001               	movlw	1
   625  0057  00F3               	movwf	?_Delay_xms+1
   626  0058  20F7               	fcall	_Delay_xms
   627                           
   628                           ;main.c: 64: PA6=0;
   629  0059  1283               	bcf	3,5	;RP0=0, select bank0
   630  005A  1303               	bcf	3,6	;RP1=0, select bank0
   631  005B  1305               	bcf	5,6
   632  005C                     l1102:	
   633                           
   634                           ;main.c: 65: }
   635                           ;main.c: 66: if(ADC6_INPUT < 512){
   636  005C  3002               	movlw	2
   637  005D  0221               	subwf	_ADC6_INPUT+1,w
   638  005E  3000               	movlw	0
   639  005F  1903               	skipnz
   640  0060  0220               	subwf	_ADC6_INPUT,w
   641  0061  1803               	skipnc
   642  0062  2865               	goto	l6920
   643  0063                     l6918:	
   644                           
   645                           ;main.c: 67: PC1 = 0;
   646  0063  1087               	bcf	7,1
   647                           
   648                           ;main.c: 68: }else{
   649  0064  2818               	goto	l6872
   650  0065                     l6920:	
   651                           
   652                           ;main.c: 69: if(ADC1_ADCOUT <= ADC_STUDY_VALUE){
   653  0065  0879               	movf	_ADC1_ADCOUT+1,w
   654  0066  0223               	subwf	_ADC_STUDY_VALUE+1,w
   655  0067  1D03               	skipz
   656  0068  286B               	goto	u285
   657  0069  0878               	movf	_ADC1_ADCOUT,w
   658  006A  0222               	subwf	_ADC_STUDY_VALUE,w
   659  006B                     u285:	
   660  006B  1803               	btfsc	3,0
   661  006C  2863               	goto	l6918
   662                           
   663                           ;main.c: 72: PC1=1;
   664  006D  1487               	bsf	7,1
   665  006E  2818               	goto	l6872
   666  006F                     __end_of_main:	
   667                           
   668                           	psect	text517
   669  008E                     __ptext517:	
   670 ;; =============== function _main ends ============
   671                           
   672                           
   673 ;; *************** function _LED_Study_End *****************
   674 ;; Defined at:
   675 ;;		line 63 in file "myconfiguration.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;		None               void
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 60/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1
   689 ;;      Params:         0       0       0
   690 ;;      Locals:         0       0       0
   691 ;;      Temps:          0       0       0
   692 ;;      Totals:         0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    2
   696 ;; This function calls:
   697 ;;		_Delay_xms
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702  008E                     _LED_Study_End:	
   703  008E  3028               	movlw	40
   704                           
   705                           ;myconfiguration.c: 64: PA6 = 1;
   706                           
   707                           ; Regs used in _LED_Study_End: [wreg+status,2+status,0+pclath+cstack]
   708  008F  1705               	bsf	5,6
   709                           
   710                           ;myconfiguration.c: 65: Delay_xms(40);
   711  0090  00F2               	movwf	?_Delay_xms
   712  0091  01F3               	clrf	?_Delay_xms+1
   713  0092  20F7               	fcall	_Delay_xms
   714                           
   715                           ;myconfiguration.c: 66: PA6 = 0;
   716                           
   717                           ;myconfiguration.c: 67: Delay_xms(40);
   718  0093  209D               	fcall	PL2	;call to abstracted procedure
   719  0094  20F7               	fcall	_Delay_xms
   720                           
   721                           ;myconfiguration.c: 68: PA6 = 1;
   722                           
   723                           ;myconfiguration.c: 69: Delay_xms(40);
   724  0095  20A4               	fcall	PL3	;call to abstracted procedure
   725  0096  20F7               	fcall	_Delay_xms
   726                           
   727                           ;myconfiguration.c: 70: PA6 = 0;
   728                           
   729                           ;myconfiguration.c: 71: Delay_xms(40);
   730  0097  209D               	fcall	PL2	;call to abstracted procedure
   731  0098  20F7               	fcall	_Delay_xms
   732                           
   733                           ;myconfiguration.c: 72: PA6 = 1;
   734                           
   735                           ;myconfiguration.c: 73: Delay_xms(40);
   736  0099  20A4               	fcall	PL3	;call to abstracted procedure
   737  009A  20F7               	fcall	_Delay_xms
   738                           
   739                           ;myconfiguration.c: 74: PA6 = 0;
   740                           
   741                           ;myconfiguration.c: 75: Delay_xms(40);
   742  009B  209D               	fcall	PL2	;call to abstracted procedure
   743  009C  28F7               	ljmp	l6698
   744  009D                     __end_of_LED_Study_End:	
   745  009D                     PL2:	
   746  009D  3028               	movlw	40
   747  009E  1283               	bcf	3,5	;RP0=0, select bank0
   748  009F  1303               	bcf	3,6	;RP1=0, select bank0
   749  00A0  1305               	bcf	5,6
   750  00A1  00F2               	movwf	?_Delay_xms
   751  00A2  01F3               	clrf	?_Delay_xms+1
   752  00A3  0008               	return
   753  00A4                     PL3:	
   754  00A4  3028               	movlw	40
   755  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   756  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   757  00A7  1705               	bsf	5,6
   758  00A8  00F2               	movwf	?_Delay_xms
   759  00A9  01F3               	clrf	?_Delay_xms+1
   760  00AA  0008               	return
   761                           
   762                           	psect	text518
   763  00C5                     __ptext518:	
   764 ;; =============== function _LED_Study_End ends ============
   765                           
   766                           
   767 ;; *************** function _ADC_Init *****************
   768 ;; Defined at:
   769 ;;		line 18 in file "myadc.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 17F/20
   780 ;;		On exit  : 60/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1
   783 ;;      Params:         0       0       0
   784 ;;      Locals:         0       0       0
   785 ;;      Temps:          0       0       0
   786 ;;      Totals:         0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    2
   790 ;; This function calls:
   791 ;;		_Delay_xms
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796  00C5                     _ADC_Init:	
   797  00C5  3081               	movlw	129
   798                           
   799                           ;myadc.c: 20: TRISA1=1;
   800                           
   801                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+pclath+cstack]
   802  00C6  1485               	bsf	5,1
   803                           
   804                           ;myadc.c: 21: TRISC2=1;
   805  00C7  1507               	bsf	7,2
   806                           
   807                           ;myadc.c: 22: ANSEL1=1;
   808  00C8  1491               	bsf	17,1
   809                           
   810                           ;myadc.c: 23: ANSEL6=1;
   811  00C9  1711               	bsf	17,6
   812                           
   813                           ;myadc.c: 26: DIVS=0;
   814  00CA  139F               	bcf	31,7
   815                           
   816                           ;myadc.c: 27: ADCS0=0;ADCS1=0;ADCS2=0;
   817  00CB  121F               	bcf	31,4
   818  00CC  129F               	bcf	31,5
   819  00CD  131F               	bcf	31,6
   820                           
   821                           ;myadc.c: 29: ADCON0=0B10000001;
   822  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   823  00CF  009F               	movwf	31	;volatile
   824                           
   825                           ;myadc.c: 30: VCFG0=0;
   826  00D0  129F               	bcf	31,5
   827                           
   828                           ;myadc.c: 31: CHS0=1;CHS1=0;CHS2=0;
   829  00D1  151F               	bsf	31,2
   830  00D2  119F               	bcf	31,3
   831  00D3  121F               	bcf	31,4
   832                           
   833                           ;myadc.c: 32: ADFM=1;
   834  00D4  179F               	bsf	31,7
   835                           
   836                           ;myadc.c: 33: ADON=1;
   837  00D5  141F               	bsf	31,0
   838                           
   839                           ;myadc.c: 35: Delay_xms(1);
   840  00D6  01F2               	clrf	?_Delay_xms
   841  00D7  0AF2               	incf	?_Delay_xms,f
   842  00D8  01F3               	clrf	?_Delay_xms+1
   843  00D9  20F7               	fcall	_Delay_xms
   844                           
   845                           ;myadc.c: 37: GO_DONE=1;
   846  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   847  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   848  00DC  149F               	bsf	31,1
   849  00DD  0008               	return
   850  00DE                     __end_of_ADC_Init:	
   851                           
   852                           	psect	text519
   853  0132                     __ptext519:	
   854 ;; =============== function _ADC_Init ends ============
   855                           
   856                           
   857 ;; *************** function _Write_EEPROM_u16 *****************
   858 ;; Defined at:
   859 ;;		line 27 in file "MyEEProm.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  EEAddress       1    wreg     unsigned char 
   862 ;;  EEDatas         2    4[COMMON] unsigned int 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  EEAddress       1    2[BANK0 ] unsigned char 
   865 ;;  DATA_L          1    1[BANK0 ] unsigned char 
   866 ;;  DATA_H          1    0[BANK0 ] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 60/0
   873 ;;		On exit  : 60/20
   874 ;;		Unchanged: FFE00/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1
   876 ;;      Params:         2       0       0
   877 ;;      Locals:         0       3       0
   878 ;;      Temps:          0       0       0
   879 ;;      Totals:         2       3       0
   880 ;;Total ram usage:        5 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    2
   883 ;; This function calls:
   884 ;;		_Write_EEPROM_u8
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889  0132                     _Write_EEPROM_u16:	
   890                           
   891                           ; Regs used in _Write_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
   892                           ;Write_EEPROM_u16@EEAddress stored from wreg
   893  0132  00A6               	movwf	Write_EEPROM_u16@EEAddress
   894                           
   895                           ;MyEEProm.c: 29: unsigned char DATA_L=0;
   896  0133  01A5               	clrf	Write_EEPROM_u16@DATA_L
   897                           
   898                           ;MyEEProm.c: 31: DATA_H = (EEDatas>>8)&0xff;
   899  0134  0875               	movf	Write_EEPROM_u16@EEDatas+1,w
   900  0135  00A4               	movwf	Write_EEPROM_u16@DATA_H
   901                           
   902                           ;MyEEProm.c: 32: DATA_L = EEDatas&0xff;
   903  0136  0874               	movf	Write_EEPROM_u16@EEDatas,w
   904  0137  00A5               	movwf	Write_EEPROM_u16@DATA_L
   905                           
   906                           ;MyEEProm.c: 33: Write_EEPROM_u8(EEAddress,DATA_H);
   907  0138  0824               	movf	Write_EEPROM_u16@DATA_H,w
   908  0139  00F2               	movwf	?_Write_EEPROM_u8
   909  013A  0826               	movf	Write_EEPROM_u16@EEAddress,w
   910  013B  20AB               	fcall	_Write_EEPROM_u8
   911                           
   912                           ;MyEEProm.c: 34: Write_EEPROM_u8(EEAddress+1,DATA_L);
   913  013C  1283               	bcf	3,5	;RP0=0, select bank0
   914  013D  0825               	movf	Write_EEPROM_u16@DATA_L,w
   915  013E  00F2               	movwf	?_Write_EEPROM_u8
   916  013F  0A26               	incf	Write_EEPROM_u16@EEAddress,w
   917  0140  28AB               	ljmp	_Write_EEPROM_u8
   918  0141                     __end_of_Write_EEPROM_u16:	
   919                           
   920                           	psect	text520
   921  00F7                     __ptext520:	
   922 ;; =============== function _Write_EEPROM_u16 ends ============
   923                           
   924                           
   925 ;; *************** function _Delay_xms *****************
   926 ;; Defined at:
   927 ;;		line 46 in file "myconfiguration.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  x               2    2[COMMON] unsigned int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  i               2    6[COMMON] unsigned int 
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 40/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1
   941 ;;      Params:         2       0       0
   942 ;;      Locals:         2       0       0
   943 ;;      Temps:          2       0       0
   944 ;;      Totals:         6       0       0
   945 ;;Total ram usage:        6 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;;		_ADC_Init
   953 ;;		_LED_Study_End
   954 ;; This function uses a non-reentrant model
   955 ;;
   956  00F7                     _Delay_xms:	
   957  00F7                     l6698:	
   958                           ; Regs used in _Delay_xms: [wreg+status,2+status,0]
   959                           
   960                           
   961                           ;myconfiguration.c: 47: unsigned int i;
   962                           ;myconfiguration.c: 48: for(i=0;i<x;i++){
   963  00F7  01F6               	clrf	Delay_xms@i
   964  00F8  01F7               	clrf	Delay_xms@i+1
   965  00F9                     l6706:	
   966  00F9  0873               	movf	Delay_xms@x+1,w
   967  00FA  0277               	subwf	Delay_xms@i+1,w
   968  00FB  1D03               	skipz
   969  00FC  28FF               	goto	u145
   970  00FD  0872               	movf	Delay_xms@x,w
   971  00FE  0276               	subwf	Delay_xms@i,w
   972  00FF                     u145:	
   973  00FF  1803               	btfsc	3,0
   974  0100  0008               	return
   975                           
   976                           ;myconfiguration.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
   977  0101  3006               	movlw	6
   978  0102  00F5               	movwf	??_Delay_xms+1
   979  0103  3030               	movlw	48
   980  0104  00F4               	movwf	??_Delay_xms
   981  0105                     u297:	
   982  0105  0BF4               	decfsz	??_Delay_xms,f
   983  0106  2905               	goto	u297
   984  0107  0BF5               	decfsz	??_Delay_xms+1,f
   985  0108  2905               	goto	u297
   986  0109  0064               	clrwdt
   987  010A  0064               	clrwdt	;#
   988  010B  0AF6               	incf	Delay_xms@i,f
   989  010C  1903               	skipnz
   990  010D  0AF7               	incf	Delay_xms@i+1,f
   991  010E  28F9               	goto	l6706
   992  010F                     __end_of_Delay_xms:	
   993                           
   994                           	psect	text521
   995  00DE                     __ptext521:	
   996 ;; =============== function _Delay_xms ends ============
   997                           
   998                           
   999 ;; *************** function _ExchChannel *****************
  1000 ;; Defined at:
  1001 ;;		line 70 in file "myadc.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  ch_temp         1    wreg     unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  ch_temp         1    4[COMMON] unsigned char 
  1006 ;;  adc_ch_temp     1    5[COMMON] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 60/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1
  1016 ;;      Params:         0       0       0
  1017 ;;      Locals:         2       0       0
  1018 ;;      Temps:          2       0       0
  1019 ;;      Totals:         4       0       0
  1020 ;;Total ram usage:        4 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029  00DE                     _ExchChannel:	
  1030                           
  1031                           ; Regs used in _ExchChannel: [wreg+status,2+status,0]
  1032                           ;ExchChannel@ch_temp stored from wreg
  1033  00DE  00F4               	movwf	ExchChannel@ch_temp
  1034                           
  1035                           ;myadc.c: 71: unsigned char adc_ch_temp;
  1036                           ;myadc.c: 73: adc_ch_temp = ch_temp;
  1037  00DF  00F5               	movwf	ExchChannel@adc_ch_temp
  1038                           
  1039                           ;myadc.c: 74: adc_ch_temp = adc_ch_temp<<2;
  1040  00E0  1003               	clrc
  1041  00E1  0DF5               	rlf	ExchChannel@adc_ch_temp,f
  1042  00E2  1003               	clrc
  1043  00E3  0DF5               	rlf	ExchChannel@adc_ch_temp,f
  1044                           
  1045                           ;myadc.c: 75: ADCON0 = (ADCON0&0xe3)|adc_ch_temp;
  1046  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00E6  081F               	movf	31,w
  1049  00E7  39E3               	andlw	227
  1050  00E8  0475               	iorwf	ExchChannel@adc_ch_temp,w
  1051  00E9  009F               	movwf	31	;volatile
  1052                           
  1053                           ;myadc.c: 76: _delay((unsigned long)((1)*(16000000/4000.0)));
  1054  00EA  3006               	movlw	6
  1055  00EB  00F3               	movwf	??_ExchChannel+1
  1056  00EC  3030               	movlw	48
  1057  00ED  00F2               	movwf	??_ExchChannel
  1058  00EE                     u307:	
  1059  00EE  0BF2               	decfsz	??_ExchChannel,f
  1060  00EF  28EE               	goto	u307
  1061  00F0  0BF3               	decfsz	??_ExchChannel+1,f
  1062  00F1  28EE               	goto	u307
  1063  00F2  0064               	clrwdt
  1064                           
  1065                           ;myadc.c: 77: GO_DONE=1;
  1066  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1067  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1068  00F5  149F               	bsf	31,1
  1069  00F6  0008               	return
  1070  00F7                     __end_of_ExchChannel:	
  1071                           
  1072                           	psect	text522
  1073  0122                     __ptext522:	
  1074 ;; =============== function _ExchChannel ends ============
  1075                           
  1076                           
  1077 ;; *************** function _Read_EEPROM_u16 *****************
  1078 ;; Defined at:
  1079 ;;		line 39 in file "MyEEProm.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  EEAddress       1    wreg     unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  EEAddress       1    2[BANK0 ] unsigned char 
  1084 ;;  EepromData      2    0[BANK0 ] unsigned int 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  2    4[COMMON] unsigned int 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 60/0
  1091 ;;		On exit  : 60/0
  1092 ;;		Unchanged: FFF9F/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1
  1094 ;;      Params:         2       0       0
  1095 ;;      Locals:         0       3       0
  1096 ;;      Temps:          0       0       0
  1097 ;;      Totals:         2       3       0
  1098 ;;Total ram usage:        5 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    2
  1101 ;; This function calls:
  1102 ;;		_Read_EEPROM_u8
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107  0122                     _Read_EEPROM_u16:	
  1108                           
  1109                           ; Regs used in _Read_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
  1110                           ;Read_EEPROM_u16@EEAddress stored from wreg
  1111  0122  00A6               	movwf	Read_EEPROM_u16@EEAddress
  1112                           
  1113                           ;MyEEProm.c: 42: EepromData = Read_EEPROM_u8(EEAddress);
  1114  0123  215C               	fcall	_Read_EEPROM_u8
  1115  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0125  00A4               	movwf	Read_EEPROM_u16@EepromData
  1117  0126  01A5               	clrf	Read_EEPROM_u16@EepromData+1
  1118                           
  1119                           ;MyEEProm.c: 43: EepromData = EepromData<<8;
  1120  0127  00A5               	movwf	Read_EEPROM_u16@EepromData+1
  1121  0128  01A4               	clrf	Read_EEPROM_u16@EepromData
  1122                           
  1123                           ;MyEEProm.c: 44: EepromData |= Read_EEPROM_u8(EEAddress+1);
  1124  0129  0A26               	incf	Read_EEPROM_u16@EEAddress,w
  1125  012A  215C               	fcall	_Read_EEPROM_u8
  1126  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1127  012C  04A4               	iorwf	Read_EEPROM_u16@EepromData,f
  1128                           
  1129                           ;MyEEProm.c: 45: return EepromData;
  1130  012D  0825               	movf	Read_EEPROM_u16@EepromData+1,w
  1131  012E  00F5               	movwf	?_Read_EEPROM_u16+1
  1132  012F  0824               	movf	Read_EEPROM_u16@EepromData,w
  1133  0130  00F4               	movwf	?_Read_EEPROM_u16
  1134  0131  0008               	return
  1135  0132                     __end_of_Read_EEPROM_u16:	
  1136                           
  1137                           	psect	text523
  1138  0154                     __ptext523:	
  1139 ;; =============== function _Read_EEPROM_u16 ends ============
  1140                           
  1141                           
  1142 ;; *************** function _EEPROM_Init *****************
  1143 ;; Defined at:
  1144 ;;		line 13 in file "MyEEProm.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;		None               void
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 60/0
  1155 ;;		On exit  : 60/20
  1156 ;;		Unchanged: FFE00/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1
  1158 ;;      Params:         0       0       0
  1159 ;;      Locals:         0       0       0
  1160 ;;      Temps:          0       0       0
  1161 ;;      Totals:         0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		_Write_EEPROM_u8
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171  0154                     _EEPROM_Init:	
  1172                           
  1173                           ;MyEEProm.c: 14: Write_EEPROM_u8(0xFF,0xAA);
  1174                           
  1175                           ; Regs used in _EEPROM_Init: [wreg+status,2+status,0+pclath+cstack]
  1176  0154  30AA               	movlw	170
  1177  0155  00F2               	movwf	?_Write_EEPROM_u8
  1178  0156  30FF               	movlw	255
  1179  0157  20AB               	fcall	_Write_EEPROM_u8
  1180                           
  1181                           ;MyEEProm.c: 15: Write_EEPROM_u8(0xFF,0xAA);
  1182  0158  30AA               	movlw	170
  1183  0159  00F2               	movwf	?_Write_EEPROM_u8
  1184  015A  30FF               	movlw	255
  1185  015B  28AB               	ljmp	_Write_EEPROM_u8
  1186  015C                     __end_of_EEPROM_Init:	
  1187                           
  1188                           	psect	text524
  1189  015C                     __ptext524:	
  1190 ;; =============== function _EEPROM_Init ends ============
  1191                           
  1192                           
  1193 ;; *************** function _Read_EEPROM_u8 *****************
  1194 ;; Defined at:
  1195 ;;		line 64 in file "MyEEProm.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  EEAddress       1    wreg     unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  EEAddress       1    2[COMMON] unsigned char 
  1200 ;;  ReEepromData    1    3[COMMON] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      unsigned char 
  1203 ;; Registers used:
  1204 ;;		wreg
  1205 ;; Tracked objects:
  1206 ;;		On entry : 60/0
  1207 ;;		On exit  : 60/20
  1208 ;;		Unchanged: FFF9F/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1
  1210 ;;      Params:         0       0       0
  1211 ;;      Locals:         2       0       0
  1212 ;;      Temps:          0       0       0
  1213 ;;      Totals:         2       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_Read_EEPROM_u16
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223  015C                     _Read_EEPROM_u8:	
  1224                           
  1225                           ; Regs used in _Read_EEPROM_u8: [wreg]
  1226                           ;Read_EEPROM_u8@EEAddress stored from wreg
  1227  015C  00F2               	movwf	Read_EEPROM_u8@EEAddress
  1228                           
  1229                           ;MyEEProm.c: 65: unsigned char ReEepromData;
  1230                           ;MyEEProm.c: 67: EEADR = EEAddress;
  1231  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1232  015E  009B               	movwf	27	;volatile
  1233                           
  1234                           ;MyEEProm.c: 68: RD = 1;
  1235  015F  141C               	bsf	28,0
  1236                           
  1237                           ;MyEEProm.c: 69: ReEepromData = EEDAT;
  1238  0160  081A               	movf	26,w	;volatile
  1239  0161  00F3               	movwf	Read_EEPROM_u8@ReEepromData
  1240                           
  1241                           ;MyEEProm.c: 70: RD = 0;
  1242  0162  101C               	bcf	28,0
  1243                           
  1244                           ;MyEEProm.c: 71: return ReEepromData;
  1245  0163  0008               	return
  1246  0164                     __end_of_Read_EEPROM_u8:	
  1247                           
  1248                           	psect	text525
  1249  00AB                     __ptext525:	
  1250 ;; =============== function _Read_EEPROM_u8 ends ============
  1251                           
  1252                           
  1253 ;; *************** function _Write_EEPROM_u8 *****************
  1254 ;; Defined at:
  1255 ;;		line 49 in file "MyEEProm.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  EEAddress       1    wreg     unsigned char 
  1258 ;;  EEDatas         1    2[COMMON] unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  EEAddress       1    3[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		wreg
  1265 ;; Tracked objects:
  1266 ;;		On entry : 40/0
  1267 ;;		On exit  : 60/20
  1268 ;;		Unchanged: FFE00/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1
  1270 ;;      Params:         1       0       0
  1271 ;;      Locals:         1       0       0
  1272 ;;      Temps:          0       0       0
  1273 ;;      Totals:         2       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_EEPROM_Init
  1281 ;;		_Write_EEPROM_u16
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284  00AB                     _Write_EEPROM_u8:	
  1285                           
  1286                           ; Regs used in _Write_EEPROM_u8: [wreg]
  1287                           ;Write_EEPROM_u8@EEAddress stored from wreg
  1288  00AB  00F3               	movwf	Write_EEPROM_u8@EEAddress
  1289                           
  1290                           ;MyEEProm.c: 50: GIE = 0;
  1291  00AC  138B               	bcf	11,7
  1292  00AD                     l4347:	
  1293                           ;MyEEProm.c: 51: while(GIE) asm("clrwdt");
  1294                           
  1295  00AD  1F8B               	btfss	11,7
  1296  00AE  28B1               	goto	l6820
  1297  00AF  0064               	clrwdt	;#
  1298  00B0  28AD               	goto	l4347
  1299  00B1                     l6820:	
  1300                           
  1301                           ;MyEEProm.c: 52: EEADR = EEAddress;
  1302  00B1  0873               	movf	Write_EEPROM_u8@EEAddress,w
  1303  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1304  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1305  00B4  009B               	movwf	27	;volatile
  1306                           
  1307                           ;MyEEProm.c: 53: EEDAT = EEDatas;
  1308  00B5  0872               	movf	Write_EEPROM_u8@EEDatas,w
  1309  00B6  009A               	movwf	26	;volatile
  1310  00B7  3034               	movlw	52
  1311                           
  1312                           ;MyEEProm.c: 54: EEIF = 0;
  1313  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00B9  138C               	bcf	12,7
  1315                           
  1316                           ;MyEEProm.c: 55: EECON1 = 0x34;
  1317  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1318  00BB  009C               	movwf	28	;volatile
  1319                           
  1320                           ;MyEEProm.c: 56: WR = 1;
  1321  00BC  141D               	bsf	29,0
  1322  00BD                     l4350:	
  1323                           ;MyEEProm.c: 57: while(WR) asm("clrwdt");
  1324                           
  1325  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1326  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1327  00BF  1C1D               	btfss	29,0
  1328  00C0  28C3               	goto	l4352
  1329  00C1  0064               	clrwdt	;#
  1330  00C2  28BD               	goto	l4350
  1331  00C3                     l4352:	
  1332                           
  1333                           ;MyEEProm.c: 59: GIE = 1;
  1334  00C3  178B               	bsf	11,7
  1335  00C4  0008               	return
  1336  00C5                     __end_of_Write_EEPROM_u8:	
  1337                           
  1338                           	psect	text526
  1339  014B                     __ptext526:	
  1340 ;; =============== function _Write_EEPROM_u8 ends ============
  1341                           
  1342                           
  1343 ;; *************** function _isKeyPressed *****************
  1344 ;; Defined at:
  1345 ;;		line 18 in file "MyKey.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      unsigned char 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 60/0
  1357 ;;		Unchanged: FFF9F/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1
  1359 ;;      Params:         0       0       0
  1360 ;;      Locals:         0       0       0
  1361 ;;      Temps:          0       0       0
  1362 ;;      Totals:         0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372  014B                     _isKeyPressed:	
  1373                           
  1374                           ;MyKey.c: 19: return PC3 ? 0:1;
  1375                           
  1376                           ; Regs used in _isKeyPressed: [wreg+status,2+status,0]
  1377  014B  1003               	clrc
  1378  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1379  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1380  014E  1D87               	btfss	7,3
  1381  014F  1403               	setc
  1382  0150  3000               	movlw	0
  1383  0151  1803               	skipnc
  1384  0152  3001               	movlw	1
  1385  0153  0008               	return
  1386  0154                     __end_of_isKeyPressed:	
  1387                           
  1388                           	psect	text527
  1389  010F                     __ptext527:	
  1390 ;; =============== function _isKeyPressed ends ============
  1391                           
  1392                           
  1393 ;; *************** function _GetADCValue *****************
  1394 ;; Defined at:
  1395 ;;		line 48 in file "myadc.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  ADC_num         2    4[COMMON] unsigned short 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    2[COMMON] unsigned short 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2
  1404 ;; Tracked objects:
  1405 ;;		On entry : 60/0
  1406 ;;		On exit  : 60/0
  1407 ;;		Unchanged: FFF9F/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         2       0       0
  1410 ;;      Locals:         2       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         4       0       0
  1413 ;;Total ram usage:        4 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422  010F                     _GetADCValue:	
  1423                           
  1424                           ;myadc.c: 49: unsigned short int ADC_num=0;
  1425                           
  1426                           ; Regs used in _GetADCValue: [wreg+status,2]
  1427  010F  01F4               	clrf	GetADCValue@ADC_num
  1428  0110  01F5               	clrf	GetADCValue@ADC_num+1
  1429                           
  1430                           ;myadc.c: 51: if(GO_DONE==0){
  1431  0111  189F               	btfsc	31,1
  1432  0112  291D               	goto	l2186
  1433                           
  1434                           ;myadc.c: 52: ADC_num=ADRESH;
  1435  0113  081E               	movf	30,w	;volatile
  1436  0114  00F4               	movwf	GetADCValue@ADC_num
  1437  0115  01F5               	clrf	GetADCValue@ADC_num+1
  1438                           
  1439                           ;myadc.c: 53: ADC_num=ADC_num<<8;
  1440  0116  00F5               	movwf	GetADCValue@ADC_num+1
  1441  0117  01F4               	clrf	GetADCValue@ADC_num
  1442                           
  1443                           ;myadc.c: 54: ADC_num=ADC_num|ADRESL;
  1444  0118  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0119  081E               	movf	30,w	;volatile
  1446  011A  04F4               	iorwf	GetADCValue@ADC_num,f
  1447                           
  1448                           ;myadc.c: 55: GO_DONE=1;
  1449  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1450  011C  149F               	bsf	31,1
  1451  011D                     l2186:	
  1452                           
  1453                           ;myadc.c: 56: }
  1454                           ;myadc.c: 57: return ADC_num;
  1455  011D  0875               	movf	GetADCValue@ADC_num+1,w
  1456  011E  00F3               	movwf	?_GetADCValue+1
  1457  011F  0874               	movf	GetADCValue@ADC_num,w
  1458  0120  00F2               	movwf	?_GetADCValue
  1459  0121  0008               	return
  1460  0122                     __end_of_GetADCValue:	
  1461                           
  1462                           	psect	text528
  1463  006F                     __ptext528:	
  1464 ;; =============== function _GetADCValue ends ============
  1465                           
  1466                           
  1467 ;; *************** function _GPIO_Init *****************
  1468 ;; Defined at:
  1469 ;;		line 22 in file "myconfiguration.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;		None               void
  1476 ;; Registers used:
  1477 ;;		None
  1478 ;; Tracked objects:
  1479 ;;		On entry : 17F/0
  1480 ;;		On exit  : 17F/20
  1481 ;;		Unchanged: FFE80/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1
  1483 ;;      Params:         0       0       0
  1484 ;;      Locals:         0       0       0
  1485 ;;      Temps:          0       0       0
  1486 ;;      Totals:         0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496  006F                     _GPIO_Init:	
  1497                           
  1498                           ;myconfiguration.c: 24: TRISA0=0;
  1499                           
  1500                           ; Regs used in _GPIO_Init: []
  1501  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0070  1005               	bcf	5,0
  1503                           
  1504                           ;myconfiguration.c: 25: TRISA1=0;
  1505  0071  1085               	bcf	5,1
  1506                           
  1507                           ;myconfiguration.c: 26: TRISA6=0;
  1508  0072  1305               	bcf	5,6
  1509                           
  1510                           ;myconfiguration.c: 28: TRISC1=0;
  1511  0073  1087               	bcf	7,1
  1512                           
  1513                           ;myconfiguration.c: 29: TRISC2=0;
  1514  0074  1107               	bcf	7,2
  1515                           
  1516                           ;myconfiguration.c: 30: TRISC3=1;
  1517  0075  1587               	bsf	7,3
  1518                           
  1519                           ;myconfiguration.c: 32: CM0=1;CM1=1;CM2=1;
  1520  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0077  1419               	bsf	25,0
  1522  0078  1499               	bsf	25,1
  1523  0079  1519               	bsf	25,2
  1524                           
  1525                           ;myconfiguration.c: 36: ANSEL0=0;ANSEL1=0;ANSEL2=0;ANSEL3=0;ANSEL4=0;ANSEL5=0;ANSEL6=0;A
      +                          NSEL7=0;
  1526  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1527  007B  1011               	bcf	17,0
  1528  007C  1091               	bcf	17,1
  1529  007D  1111               	bcf	17,2
  1530  007E  1191               	bcf	17,3
  1531  007F  1211               	bcf	17,4
  1532  0080  1291               	bcf	17,5
  1533  0081  1311               	bcf	17,6
  1534  0082  1391               	bcf	17,7
  1535                           
  1536                           ;myconfiguration.c: 38: WPUA0=1;WPUA1=1;WPUA6=1;
  1537  0083  1415               	bsf	21,0
  1538  0084  1495               	bsf	21,1
  1539  0085  1715               	bsf	21,6
  1540                           
  1541                           ;myconfiguration.c: 40: WPUC1=1;WPUC2=1;WPUC3=1;
  1542  0086  1488               	bsf	8,1
  1543  0087  1508               	bsf	8,2
  1544  0088  1588               	bsf	8,3
  1545                           
  1546                           ;myconfiguration.c: 42: WPDA4=0;WPDC1=0;WPDC2=0;WPDC3=0;
  1547  0089  1209               	bcf	9,4
  1548  008A  1189               	bcf	9,3
  1549  008B  1109               	bcf	9,2
  1550  008C  1089               	bcf	9,1
  1551  008D  0008               	return
  1552  008E                     __end_of_GPIO_Init:	
  1553                           
  1554                           	psect	text529
  1555  0164                     __ptext529:	
  1556 ;; =============== function _GPIO_Init ends ============
  1557                           
  1558                           
  1559 ;; *************** function _System_init *****************
  1560 ;; Defined at:
  1561 ;;		line 13 in file "myconfiguration.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;		None               void
  1568 ;; Registers used:
  1569 ;;		wreg, status,2
  1570 ;; Tracked objects:
  1571 ;;		On entry : 17F/0
  1572 ;;		On exit  : 17F/0
  1573 ;;		Unchanged: FFE80/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1
  1575 ;;      Params:         0       0       0
  1576 ;;      Locals:         0       0       0
  1577 ;;      Temps:          0       0       0
  1578 ;;      Totals:         0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588  0164                     _System_init:	
  1589                           
  1590                           ;myconfiguration.c: 15: OPTION = 0B00000000;
  1591                           
  1592                           ; Regs used in _System_init: [wreg+status,2]
  1593  0164  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0165  0181               	clrf	1	;volatile
  1595                           
  1596                           ;myconfiguration.c: 16: OSCCON = 0B01110000;
  1597  0166  3070               	movlw	112
  1598  0167  008F               	movwf	15	;volatile
  1599                           
  1600                           ;myconfiguration.c: 17: WDTCON = 0B00001000;
  1601  0168  3008               	movlw	8
  1602  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1603  016A  0098               	movwf	24	;volatile
  1604  016B  0008               	return
  1605  016C                     __end_of_System_init:	
  1606                           
  1607                           	psect	text530
  1608  016C                     __ptext530:	
  1609 ;; =============== function _System_init ends ============
  1610                           
  1611                           
  1612 ;; *************** function _ISR *****************
  1613 ;; Defined at:
  1614 ;;		line 84 in file "main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;		None               void
  1621 ;; Registers used:
  1622 ;;		None
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: FFFFF/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1
  1628 ;;      Params:         0       0       0
  1629 ;;      Locals:         0       0       0
  1630 ;;      Temps:          2       0       0
  1631 ;;      Totals:         2       0       0
  1632 ;;Total ram usage:        2 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		Interrupt level 1
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640  016C                     _ISR:	
  1641  016C  0871               	movf	??_ISR+1,w
  1642  016D  008A               	movwf	10
  1643  016E  0E70               	swapf	??_ISR^(0+-128),w
  1644  016F  0083               	movwf	3
  1645  0170  0EFE               	swapf	126,f
  1646  0171  0E7E               	swapf	126,w
  1647  0172  0009               	retfie
  1648  0173                     __end_of_ISR:	
  1649                           
  1650                           	psect	intentry
  1651  0004                     __pintentry:	
  1652                           ; Regs used in _ISR: []
  1653                           
  1654  0004                     interrupt_function:	
  1655  007E                     saved_w	set	btemp
  1656  0004  00FE               	movwf	btemp
  1657  0005  0E03               	swapf	3,w
  1658  0006  00F0               	movwf	??_ISR
  1659  0007  080A               	movf	10,w
  1660  0008  00F1               	movwf	??_ISR+1
  1661  0009  296C               	ljmp	_ISR
  1662                           
  1663                           	psect	text531
  1664  0000                     __ptext531:	
  1665 ;; =============== function _ISR ends ============
  1666                           
  1667  007E                     btemp	set	126	;btemp
  1668  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 23 18:06:29 2018

                         _i 007A                           _j 007B                          _RD 04E0  
                        _WR 04E8               ??_ExchChannel 0072                         _CM0 00C8  
                       _CM1 00C9                         _CM2 00CA                         _GIE 005F  
                       _PC1 0039                         _PA6 002E                         _PC3 003B  
                       u145 00FF                         u307 00EE                         _ISR 016C  
                       u285 006B                         _SR0 0CF6                         u297 0105  
                       _SR1 0CF7      __size_of_LED_Study_End 000F                        ?_ISR 0070  
                      l1102 005C   __size_of_Write_EEPROM_u16 000F                        l2190 0000  
                      l2183 0000                        l2186 011D                        l2187 0000  
                      l3260 0000                        l3257 0000                        l3266 0000  
                      l4341 0000                        l3269 0000                        l4350 00BD  
                      l4352 00C3                        l4344 0000                        l4353 0000  
                      l4338 0000                        l4347 00AD                        l4356 0000  
                      l5421 0000                        l6702 0000                        l6640 0000  
                      l6704 0000                        l6720 0000                        _ADFM 00FF  
                      l6642 0000                        l6650 0000                        l6706 00F9  
                      l6730 0000                        l6722 0000                        l6636 0000  
                      l6644 0000                        l6820 00B1                        l6732 0000  
                      l6724 0000                        l6740 0000                        l6900 0000  
                      l6638 0000                        l6646 0000                        l6654 0000  
                      l6822 0000                        l6830 0000                        l6734 0000  
                      l6726 0000                        l6718 0000                        l6750 0000  
                      l6742 0000                        l6824 0000                        l6840 0000  
                      l6736 0000                        l6728 0000                        l6744 0000  
                      l6920 0065                        l6912 004E                        l6818 0000  
                      l6826 0000                        l6834 0000                        l6842 0000  
                      l6690 0000                        l6850 0000                        l6746 0000  
                      l6738 0000                        l6914 0000                        l6906 0000  
                      l6828 0000                        l6844 0000                        l6836 0000  
                      l6692 0000                        l6852 0000                        l6748 0000  
                      l6916 0000                        l6860 0000                        l6838 0000  
                      l6694 0000                        l6854 0000                        l6918 0063  
                      l6870 0000                        l6862 0000                        l6696 0000  
                      l6688 0000                        l6856 0000                        l6848 0000  
                      l6880 001B                        l6872 0018                        l6864 0000  
                      l6698 00F7                        l6890 0000                        l6882 0000  
                      l6874 0000                        l6866 0000                        l6858 0000  
                      l6884 0000                        l6868 0000                        _ADON 00F8  
                      l6886 0000                        l6896 002A                        l6898 0000  
                      _CHS0 00FA                        _CHS1 00FB                        _CHS2 00FC  
                      _EEIF 0067                        _DIVS 04FF                        _STRA 0CE8  
                      _STRB 0CE9                        _STRC 0CEA                        _STRD 0CEB  
                      _WREN 0C62              ??_isKeyPressed 0072                        _main 000B  
                      btemp 007E            __end_of_ADC_Init 00DE                 _GetADCValue 010F  
                      start 000A          __size_of_GPIO_Init 001F              _Read_EEPROM_u8 015C  
      __size_of_System_init 0008                       ??_ISR 0070   Read_EEPROM_u16@EepromData 0024  
                     _C1SEN 0CF5                       _C2REN 0CF4                       _ADCS0 04FC  
                     _ADCS1 04FD                       _ADCS2 04FE                       ?_main 0070  
                     _EEADR 009B                       _EEDAT 009A                       _EEPGD 0C67  
                     _VCFG0 00FD                       _WPDA4 044C                       _WPDC1 044B  
                     _WPDC2 044A                       _SRCON 019E                       _WPDC3 0449  
                     _PULSR 0CF2                       _PULSS 0CF3                       _WPUA0 04A8  
                     _WPUA1 04A9                       _WPUC1 0441                       _WPUC2 0442  
                     _WPUA6 04AE                       _WPUC3 0443         __end_of_ExchChannel 00F7  
                     pclath 000A                       status 0003    Read_EEPROM_u16@EEAddress 0026  
                     wtemp0 007E      __end_of_Read_EEPROM_u8 0164             _Read_EEPROM_u16 0122  
      __size_of_EEPROM_Init 0008               _LED_Study_End 008E                __end_of_main 006F  
    Write_EEPROM_u16@DATA_H 0024      Write_EEPROM_u16@DATA_L 0025          __size_of_Delay_xms 0018  
                    ??_main 0078           __end_of_GPIO_Init 008E                      _ADCON0 001F  
                    _ADRESH 001E                      _ADRESL 009E                      _EECON1 009C  
                    _ANSEL0 0488                      _ANSEL1 0489                      _ANSEL2 048A  
                    _ANSEL3 048B                      _ANSEL4 048C                      _ANSEL5 048D  
                    _ANSEL6 048E                      _ANSEL7 048F                      i1l1114 0000  
                    _OSCCON 008F                      _OPTION 0081                      _WDTCON 0018  
                    _TRISA0 0428                      _TRISA1 0429                      _TRISC1 0439  
                    _TRISC2 043A                      _TRISA6 042E                      _TRISC3 043B  
           ?_Read_EEPROM_u8 0070              ?_LED_Study_End 0070      Write_EEPROM_u8@EEDatas 0072  
      __end_of_isKeyPressed 0154                 _ExchChannel 00DE    __size_of_Write_EEPROM_u8 001A  
                 ?_ADC_Init 0070                      saved_w 007E            _Write_EEPROM_u16 0132  
   __end_of_Read_EEPROM_u16 0132           __end_of_Delay_xms 010F              __pcstackCOMMON 0070  
                ??_ADC_Init 0078     Write_EEPROM_u16@EEDatas 0074      ExchChannel@adc_ch_temp 0075  
   Read_EEPROM_u8@EEAddress 0072                  __pbssBANK0 0020             ??_LED_Study_End 0078  
              ?_GetADCValue 0072                  __pmaintext 000B                  __pintentry 0004  
                   _GO_DONE 00F9                     _PSTRCON 019D                     _STRSYNC 0CEC  
         ??_Write_EEPROM_u8 0073            ?_Read_EEPROM_u16 0074               ??_System_init 0072  
     __size_of_isKeyPressed 0009                __size_of_ISR 0007            ??_Read_EEPROM_u8 0072  
                 _GPIO_Init 006F        end_of_initialization 0149               ??_EEPROM_Init 0074  
               _ADC1_ADCOUT 0078                _isKeyPressed 014B    __end_of_Write_EEPROM_u16 0141  
       __end_of_System_init 016C                ?_ExchChannel 0070           __size_of_ADC_Init 0019  
                ?_GPIO_Init 0070          GetADCValue@ADC_num 0074                   _Delay_xms 00F7  
      __size_of_GetADCValue 0013         __end_of_EEPROM_Init 015C         start_initialization 0141  
               __end_of_ISR 0173                 _System_init 0164                  ?_Delay_xms 0072  
Read_EEPROM_u8@ReEepromData 0073             _Write_EEPROM_u8 00AB                 __pbssCOMMON 0078  
             __pcstackBANK0 0024                 ??_GPIO_Init 0072          ExchChannel@ch_temp 0074  
               _EEPROM_Init 0154       __end_of_LED_Study_End 009D                   __ptext520 00F7  
                 __ptext521 00DE                   __ptext530 016C                   __ptext522 0122  
                 __ptext531 0000                   __ptext523 0154                   __ptext524 015C  
                 __ptext516 0000                   __ptext525 00AB                   __ptext517 008E  
                 __ptext526 014B                   __ptext518 00C5                   __ptext527 010F  
                 __ptext519 0132                   __ptext528 006F                   __ptext529 0164  
      __size_of_ExchChannel 0019                    _ADC_Init 00C5           interrupt_function 0004  
               ??_Delay_xms 0074    __size_of_Read_EEPROM_u16 0010                  _ADC6_INPUT 0020  
   __end_of_Write_EEPROM_u8 00C5           ?_Write_EEPROM_u16 0074          ??_Write_EEPROM_u16 0076  
 Write_EEPROM_u16@EEAddress 0026    Write_EEPROM_u8@EEAddress 0073             _ADC_STUDY_VALUE 0022  
             __size_of_main 0064               ??_GetADCValue 0074                ?_System_init 0070  
   __size_of_Read_EEPROM_u8 0008            ?_Write_EEPROM_u8 0072           ??_Read_EEPROM_u16 0076  
                Delay_xms@i 0076                  Delay_xms@x 0072                    intlevel1 0000  
              ?_EEPROM_Init 0070         __end_of_GetADCValue 0122               ?_isKeyPressed 0070  
